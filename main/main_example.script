
local rendercam = require "rendercam.rendercam"
local speed = vmath.vector3()

local angle = 0
--local xrot = vmath.quat_rotation_x(math.rad(-30))


function init(self)
	msg.post(".", "acquire_input_focus")
	--rendercam.follow(go.get_id("main"), true, go.get_id("main"))
	self.dir = 0
end

function update(self, dt)
	go.set_position(go.get_position() + speed * dt)
	speed = vmath.vector3()
--	rendercam.follow(go.get_id("main"), true, go.get_id("main"))
	
end

local function followSkybox(self)
	print(go.get_position("skybox"))
	--go.animate("skybox", "position", go.PLAYBACK_ONCE_FORWARD, go.get_position("skybox") + vmath.vector3(0, 0, speed),  go.EASING_LINEAR, 0.5)
end

local function walkAnimation(self)
	print(go.get_position("camera"))
	go.animate("camera", "position.y", go.PLAYBACK_ONCE_PINGPONG, go.get_position("camera").y + 20,  go.EASING_LINEAR, 0.5, 0)
	go.animate("skybox", "position.y", go.PLAYBACK_ONCE_PINGPONG, go.get_position("skybox").y + 20,  go.EASING_LINEAR, 0.5, 0)
	print(go.get_position("camera"))
end

local function followCamera(self, speed, button)
--	s = speed
	if button then
		--s = -s
		speed = -speed
	end
	
	if self.dir == 0 then

		--go.set_position(go.get_position("camera") + vmath.vector3(0, 0, speed), "camera")
		--[[go.set_position(go.get_position("bg_back") + vmath.vector3(0, 0, speed), "bg_back")	
		go.set_position(go.get_position("bg_bottom") + vmath.vector3(0, 0, speed), "bg_bottom")
		go.set_position(go.get_position("bg_top") + vmath.vector3(0, 0, speed), "bg_top")
		go.set_position(go.get_position("bg_left") + vmath.vector3(0, 0, speed), "bg_left")
		go.set_position(go.get_position("bg_right") + vmath.vector3(0, 0, speed), "bg_right")
		go.set_position(go.get_position("bg_front") + vmath.vector3(0, 0, speed), "bg_front")]]
		--go.set_position(go.get_position("skybox") + vmath.vector3(0, 0, speed), "skybox")
		go.animate("camera", "position.z", go.PLAYBACK_ONCE_FORWARD, go.get_position("camera").z + speed,  go.EASING_LINEAR, 0.7, 0)
		go.animate("skybox", "position", go.PLAYBACK_ONCE_FORWARD, go.get_position("skybox") + vmath.vector3(0, 0, speed),  go.EASING_LINEAR, 0.7, 0, walkAnimation(self))
		--go.animate("camera", "position.y", go.PLAYBACK_ONCE_PINGPONG, go.get_position("camera").y + 20,  go.EASING_LINEAR, 0.5, 0)
		--go.animate("skybox", "position.y", go.PLAYBACK_ONCE_PINGPONG, go.get_position("skybox").y + 20,  go.EASING_LINEAR, 0.5, 0)
	elseif self.dir == 1 then
		--go.set_position(go.get_position("camera") + vmath.vector3(-speed, 0, 0), "camera")
		--[[go.set_position(go.get_position("bg_back") + vmath.vector3(-speed, 0, 0), "bg_back")	
		go.set_position(go.get_position("bg_bottom") + vmath.vector3(-speed, 0, 0), "bg_bottom")
		go.set_position(go.get_position("bg_top") + vmath.vector3(-speed, 0, 0), "bg_top")
		go.set_position(go.get_position("bg_left") + vmath.vector3(-speed, 0, 0), "bg_left")
		go.set_position(go.get_position("bg_right") + vmath.vector3(-speed, 0, 0), "bg_right")
		go.set_position(go.get_position("bg_front") + vmath.vector3(-speed, 0, 0), "bg_front")]]
		--go.set_position(go.get_position("skybox") + vmath.vector3(-speed, 0, 0), "skybox")
		go.animate("camera", "position.x", go.PLAYBACK_ONCE_FORWARD, go.get_position("camera").x - speed,  go.EASING_LINEAR, 0.5)
		go.animate("skybox", "position", go.PLAYBACK_ONCE_FORWARD, go.get_position("skybox") + vmath.vector3(-speed, 0, 0),  go.EASING_LINEAR, 0.5, 0, walkAnimation(self))
	elseif self.dir == 2 then
		--go.set_position(go.get_position("camera") + vmath.vector3(0, 0, -speed), "camera")
		--[[go.set_position(go.get_position("bg_back") + vmath.vector3(0, 0, -speed), "bg_back")	
		go.set_position(go.get_position("bg_bottom") + vmath.vector3(0, 0, -speed), "bg_bottom")
		go.set_position(go.get_position("bg_top") + vmath.vector3(0, 0, -speed), "bg_top")
		go.set_position(go.get_position("bg_left") + vmath.vector3(0, 0, -speed), "bg_left")
		go.set_position(go.get_position("bg_right") + vmath.vector3(0, 0, -speed), "bg_right")
		go.set_position(go.get_position("bg_front") + vmath.vector3(0, 0, -speed), "bg_front")]]
		--go.set_position(go.get_position("skybox") + vmath.vector3(0, 0, -speed), "skybox")
		go.animate("camera", "position.z", go.PLAYBACK_ONCE_FORWARD, go.get_position("camera").z - speed,  go.EASING_LINEAR, 0.5)
		go.animate("skybox", "position", go.PLAYBACK_ONCE_FORWARD, go.get_position("skybox") + vmath.vector3(0, 0, -speed),  go.EASING_LINEAR, 0.5, 0, walkAnimation(self))
		elseif self.dir == 3 then
		--go.set_position(go.get_position("camera") + vmath.vector3(speed, 0, 0), "camera")
		--[[go.set_position(go.get_position("bg_back") + vmath.vector3(speed, 0, 0), "bg_back")	
		go.set_position(go.get_position("bg_bottom") + vmath.vector3(speed, 0, 0), "bg_bottom")
		go.set_position(go.get_position("bg_top") + vmath.vector3(speed, 0, 0), "bg_top")
		go.set_position(go.get_position("bg_left") + vmath.vector3(speed, 0, 0), "bg_left")
		go.set_position(go.get_position("bg_right") + vmath.vector3(speed, 0, 0), "bg_right")
		go.set_position(go.get_position("bg_front") + vmath.vector3(speed, 0, 0), "bg_front")]]
		--go.set_position(go.get_position("skybox") + vmath.vector3(speed, 0, 0), "skybox")
		go.animate("camera", "position.x", go.PLAYBACK_ONCE_FORWARD, go.get_position("camera").x + speed,  go.EASING_LINEAR, 0.5)
		go.animate("skybox", "position", go.PLAYBACK_ONCE_FORWARD, go.get_position("skybox") + vmath.vector3(speed, 0, 0),  go.EASING_LINEAR, 0.5, 0, walkAnimation(self))
		end
end

function on_input(self, action_id, action)
	
	if action_id == hash("up") then
		--speed = vmath.vector3(0, 1000, 0)
		--rendercam.zoom(-500)
		--go.set_position(go.get_position() + vmath.vector3(500, 0, 0))
		--go.set_position(go.get_position("camera") + vmath.vector3(0, 0, -500), "camera")
		followCamera(self, 500,  true)
		
	elseif action_id == hash("down") and action.pressed then
		--speed = vmath.vector3(0, -1000, 0)
		--rendercam.zoom(500)
		--rendercam.
		--go.set_position(go.get_position() + vmath.vector3(-500, 0, 0))
		--go.set_position(go.get_position("camera") + vmath.vector3(0, 0, 500), "camera")
		followCamera(self, 500, false)
	elseif action_id == hash("left") and action.pressed then
		self.dir = self.dir - 1
		if self.dir < 0 then
			self.dir = 3
		end
		--speed = vmath.vector3(-1000, 0, 0)
		angle = angle + 1.57
		--go.set_rotation( vmath.quat_rotation_y(angle), "camera")
		go.animate("camera", "rotation", go.PLAYBACK_ONCE_FORWARD, vmath.quat_rotation_y(angle),  go.EASING_LINEAR, 0.5)		
	elseif action_id == hash("right") and action.pressed then
		--speed = vmath.vector3(1000, 0, 0)
		self.dir = self.dir + 1
		if self.dir > 3 then
			self.dir = 0
		end
		angle = angle - 1.57
		go.animate("camera", "rotation", go.PLAYBACK_ONCE_FORWARD, vmath.quat_rotation_y(angle),  go.EASING_LINEAR, 0.5)
	elseif action_id == hash("plus") then
		go.set_position(go.get_position() + vmath.vector3(50, 0, 0))
	elseif action_id == hash("minus") then
		go.set_position(go.get_position() + vmath.vector3(-50, 0, 0))
		
	end
end

function final(self)
	msg.post(".", "release_input_focus")
end
